[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/home/radwa/IdeaProjects/sample-slick/src/main/scala/models/RolesTable.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/dao/roledao.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(/home/radwa/IdeaProjects/sample-slick/src/main/scala/dao/basedao.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/models/definaton.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/UserRegistryActor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(UserRegistryActor.DeleteUser, UserRegistryActor, UserRegistryActor.CreateUser, UserRegistryActor.GetUsers, com.exampleslick.models.definition.package, UserRegistryActor.ActionPerformed, UserRegistryActor.GetUser, dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(UserRegistryActor.DeleteUser, UserRegistryActor, UserRegistryActor.CreateUser, UserRegistryActor.GetUsers, com.exampleslick.models.definition.package, UserRegistryActor.ActionPerformed, UserRegistryActor.GetUser, dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/home/radwa/IdeaProjects/sample-slick/src/main/scala/dao/basedao.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/models/RolesTable.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/models/definaton.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/dao/roledao.scala, /home/radwa/IdeaProjects/sample-slick/src/main/scala/UserRegistryActor.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated package objects: Set(com.exampleslick.models.definition.package)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 5 Scala sources to /home/radwa/IdeaProjects/sample-slick/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 46df7a61 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/radwa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/radwa/IdeaProjects/sample-slick/target/scala-2.12/classes:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/home/radwa/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/home/radwa/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.2.3.jar:/home/radwa/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.0.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-parsing_2.12/jars/akka-parsing_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar:/home/radwa/.ivy2/cache/com.typesafe.slick/slick_2.12/bundles/slick_2.12-3.3.0.jar:/home/radwa/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/radwa/.ivy2/cache/com.typesafe.slick/slick-hikaricp_2.12/bundles/slick-hikaricp_2.12-3.2.3.jar:/home/radwa/.ivy2/cache/com.zaxxer/HikariCP/bundles/HikariCP-2.5.1.jar:/home/radwa/.ivy2/cache/mysql/mysql-connector-java/jars/mysql-connector-java-5.1.34.jar:/home/radwa/.ivy2/cache/org.slf4j/slf4j-nop/jars/slf4j-nop-1.6.4.jar:/home/radwa/.ivy2/cache/com.microsoft.sqlserver/mssql-jdbc/jars/mssql-jdbc-6.2.1.jre8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 8.817290275 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Rolex...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.Rolex)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Rolex)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Rolex,ModifiedNames(changes = UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(copy$default$2,[Default]), UsedName(Rolex,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(id,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;Rolex;init;,[Default]), UsedName(productIterator,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The models.Rolex has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(copy$default$2,[Default]), UsedName(Rolex,[Default]), UsedName(name,[Default]), UsedName(notify,[Default]), UsedName(id,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(models;Rolex;init;,[Default]), UsedName(productIterator,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.Rolex)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.RolesTable...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.RolesTable)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.RolesTable)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of dao.basedao: Set(UsedName(RolesTable,[Default]), UsedName(models;RolesTable;init;,[Default]))[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.RolesTable,ModifiedNames(changes = UsedName(tableName,[Default]), UsedName(primaryKey,[Default]), UsedName(##,[Default]), UsedName(RolesTable,[Default]), UsedName(index,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableProvider,[Default]), UsedName(tableNode,[Default]), UsedName(==,[Default]), UsedName(foreignKey,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(foreignKeys,[Default]), UsedName(toNode,[Default]), UsedName(!=,[Default]), UsedName(tableConstraints,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(name,[Default]), UsedName(O,[Default]), UsedName(TableElementType,[Default]), UsedName(notify,[Default]), UsedName(*,[Default]), UsedName(id,[Default]), UsedName(schemaName,[Default]), UsedName($isInstanceOf,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(indexes,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(hashCode,[Default]), UsedName(primaryKeys,[Default]), UsedName(column,[Default]), UsedName(finalize,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(encodeRef,[Default]), UsedName(create_*,[Default]), UsedName(index$default$3,[Default]), UsedName(models;RolesTable;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(synchronized,[Default]), UsedName(tableTag,[Default]), UsedName(ne,[Default]))) invalidates 2 classes due to The models.RolesTable has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(tableName,[Default]), UsedName(primaryKey,[Default]), UsedName(##,[Default]), UsedName(RolesTable,[Default]), UsedName(index,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(tableProvider,[Default]), UsedName(tableNode,[Default]), UsedName(==,[Default]), UsedName(foreignKey,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(foreignKeys,[Default]), UsedName(toNode,[Default]), UsedName(!=,[Default]), UsedName(tableConstraints,[Default]), UsedName(equals,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(name,[Default]), UsedName(O,[Default]), UsedName(TableElementType,[Default]), UsedName(notify,[Default]), UsedName(*,[Default]), UsedName(id,[Default]), UsedName(schemaName,[Default]), UsedName($isInstanceOf,[Default]), UsedName(foreignKey$default$5,[Default]), UsedName(indexes,[Default]), UsedName(foreignKey$default$6,[Default]), UsedName(hashCode,[Default]), UsedName(primaryKeys,[Default]), UsedName(column,[Default]), UsedName(finalize,[Default]), UsedName(collectFieldSymbols,[Default]), UsedName(encodeRef,[Default]), UsedName(create_*,[Default]), UsedName(index$default$3,[Default]), UsedName(models;RolesTable;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(tableIdentitySymbol,[Default]), UsedName(synchronized,[Default]), UsedName(tableTag,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.RolesTable)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> by member reference: Set(dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dao.basedao...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding dao.userdao by dao.basedao[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dao.userdao, dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRegistryActor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of dao.userdao. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dao.basedao,ModifiedNames(changes = UsedName(rolesTable,[Default]))) invalidates 2 classes due to The dao.basedao has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(rolesTable,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(dao.userdao, dao.basedao)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from models.Roles...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(models.Roles)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(models.Roles)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(models.Roles,ModifiedNames(changes = UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(roles,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(models;Roles;init;,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(Roles,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]))) invalidates 1 classes due to The models.Roles has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(##,[Default]), UsedName(asInstanceOf,[Default]), UsedName(toString,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(isInstanceOf,[Default]), UsedName(canEqual,[Default]), UsedName(roles,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(getClass,[Default]), UsedName(!=,[Default]), UsedName(productElement,[Default]), UsedName(equals,[Default]), UsedName(models;Roles;init;,[Default]), UsedName(productArity,[Default]), UsedName($init$,[Default]), UsedName(clone,[Default]), UsedName(notify,[Default]), UsedName(Roles,[Default]), UsedName($isInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(hashCode,[Default]), UsedName(finalize,[Default]), UsedName(productPrefix,[Default]), UsedName(copy,[Default]), UsedName($asInstanceOf,[Default]), UsedName(productIterator,[Default]), UsedName(synchronized,[Default]), UsedName(ne,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(models.Roles)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from com.exampleslick.models.definition.package...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(com.exampleslick.models.definition.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(com.exampleslick.models.definition.package)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRegistryActor.DeleteUser. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRegistryActor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of dao.userdao. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRegistryActor.GetUser. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRoute. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(com.exampleslick.models.definition.package,ModifiedNames(changes = UsedName(RoleId,[Default]))) invalidates 1 classes due to The com.exampleslick.models.definition.package has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(RoleId,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(com.exampleslick.models.definition.package)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(dao.userdao)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dao.userdao)[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding UserRegistryActor by dao.userdao[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding main by UserRegistryActor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding UserRoute by UserRegistryActor[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding jasonSupport by UserRegistryActor[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set(dao.userdao)[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /home/radwa/IdeaProjects/sample-slick/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.2.5:compile for Scala 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 3322f743 for Scala compiler version 2.12.8[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes:/home/radwa/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/radwa/IdeaProjects/sample-slick/target/scala-2.12/classes:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/home/radwa/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-stream_2.12/jars/akka-stream_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-protobuf_2.12/jars/akka-protobuf_2.12-2.5.13.jar:/home/radwa/.ivy2/cache/org.reactivestreams/reactive-streams/jars/reactive-streams-1.0.2.jar:/home/radwa/.ivy2/cache/com.typesafe/ssl-config-core_2.12/bundles/ssl-config-core_2.12-0.2.3.jar:/home/radwa/.ivy2/cache/org.scala-lang.modules/scala-parser-combinators_2.12/bundles/scala-parser-combinators_2.12-1.1.0.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http_2.12/jars/akka-http_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http-core_2.12/jars/akka-http-core_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-parsing_2.12/jars/akka-parsing_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/com.typesafe.akka/akka-http-spray-json_2.12/jars/akka-http-spray-json_2.12-10.1.3.jar:/home/radwa/.ivy2/cache/io.spray/spray-json_2.12/bundles/spray-json_2.12-1.3.4.jar:/home/radwa/.ivy2/cache/com.typesafe.slick/slick_2.12/bundles/slick_2.12-3.3.0.jar:/home/radwa/.ivy2/cache/org.slf4j/slf4j-api/jars/slf4j-api-1.7.25.jar:/home/radwa/.ivy2/cache/com.typesafe.slick/slick-hikaricp_2.12/bundles/slick-hikaricp_2.12-3.2.3.jar:/home/radwa/.ivy2/cache/com.zaxxer/HikariCP/bundles/HikariCP-2.5.1.jar:/home/radwa/.ivy2/cache/mysql/mysql-connector-java/jars/mysql-connector-java-5.1.34.jar:/home/radwa/.ivy2/cache/org.slf4j/slf4j-nop/jars/slf4j-nop-1.6.4.jar:/home/radwa/.ivy2/cache/com.microsoft.sqlserver/mssql-jdbc/jars/mssql-jdbc-6.2.1.jre8.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 1.133226188 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from dao.userdao...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(dao.userdao)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(dao.userdao)[0m
[0m[[0m[0mdebug[0m] [0m[0mNone of the modified names appears in source file of UserRegistryActor. This dependency is not being considered for invalidation.[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(dao.userdao,ModifiedNames(changes = UsedName(rolesTable,[Default]))) invalidates 1 classes due to The dao.userdao has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(rolesTable,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(dao.userdao)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
